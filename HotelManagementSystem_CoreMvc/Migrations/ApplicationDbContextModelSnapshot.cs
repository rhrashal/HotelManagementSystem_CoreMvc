// <auto-generated />
using System;
using HotelManagementSystem_CoreMvc.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelManagementSystem_CoreMvc.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.Adult", b =>
                {
                    b.Property<int>("AdultId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumberOfAdults")
                        .HasMaxLength(50);

                    b.HasKey("AdultId");

                    b.ToTable("Adult");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.AuthenticModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ControllerName");

                    b.Property<bool>("Delete");

                    b.Property<bool>("Insert");

                    b.Property<bool>("Retrive");

                    b.Property<string>("RoleId");

                    b.Property<bool>("Update");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AuthenticModel");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.BeddingType", b =>
                {
                    b.Property<int>("BeddingTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BeddingTypeName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("BeddingTypeId");

                    b.ToTable("BeddingType");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("AdultId")
                        .IsRequired();

                    b.Property<DateTime?>("ArrivalTime")
                        .IsRequired();

                    b.Property<int?>("BeddingTypeId")
                        .IsRequired();

                    b.Property<int?>("ChildId")
                        .IsRequired();

                    b.Property<DateTime?>("DepartureDate")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NID_No")
                        .IsRequired();

                    b.Property<string>("Notes")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<int?>("RoomQuantityId")
                        .IsRequired();

                    b.Property<int?>("RoomTypeId")
                        .IsRequired();

                    b.HasKey("BookingId");

                    b.HasIndex("AdultId");

                    b.HasIndex("BeddingTypeId");

                    b.HasIndex("ChildId");

                    b.HasIndex("RoomQuantityId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.Child", b =>
                {
                    b.Property<int>("ChildId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumberOfChild");

                    b.HasKey("ChildId");

                    b.ToTable("Child");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ImageUrl");

                    b.Property<decimal?>("Price")
                        .IsRequired();

                    b.HasKey("FoodId");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.Guest", b =>
                {
                    b.Property<int>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NID_No")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.HasKey("GuestId");

                    b.ToTable("Guest");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.MenuHelperModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName");

                    b.Property<string>("ControllerName");

                    b.Property<int?>("MenuModelId");

                    b.HasKey("Id");

                    b.HasIndex("MenuModelId");

                    b.ToTable("MenuHelperModel");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.MenuModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MenuHelperModelId");

                    b.Property<string>("RollId");

                    b.Property<string>("RollIdText");

                    b.HasKey("Id");

                    b.ToTable("MenuModel");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.MenuModelManage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Delete");

                    b.Property<bool>("Insert");

                    b.Property<int>("MenuModelId");

                    b.Property<bool>("Retrive");

                    b.Property<bool>("Update");

                    b.HasKey("Id");

                    b.HasIndex("MenuModelId")
                        .IsUnique();

                    b.ToTable("MenuModelManage");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.OrderFood", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FoodId")
                        .IsRequired();

                    b.Property<int?>("GuestId")
                        .IsRequired();

                    b.Property<int>("Quntity");

                    b.HasKey("OrderId");

                    b.HasIndex("FoodId");

                    b.HasIndex("GuestId");

                    b.ToTable("OrderFood");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.Reservasion", b =>
                {
                    b.Property<int>("ReservasionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdultId")
                        .IsRequired();

                    b.Property<DateTime?>("ArrivalTime")
                        .IsRequired();

                    b.Property<int?>("ChildId")
                        .IsRequired();

                    b.Property<DateTime?>("DepartureDate")
                        .IsRequired();

                    b.Property<int?>("GuestId")
                        .IsRequired();

                    b.Property<int?>("RoomId")
                        .IsRequired();

                    b.Property<int?>("RoomQuantityId")
                        .IsRequired();

                    b.HasKey("ReservasionId");

                    b.HasIndex("AdultId");

                    b.HasIndex("ChildId");

                    b.HasIndex("GuestId");

                    b.HasIndex("RoomId");

                    b.HasIndex("RoomQuantityId");

                    b.ToTable("Reservasion");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BeddingTypeId")
                        .IsRequired();

                    b.Property<string>("ImageUrl");

                    b.Property<decimal?>("Price")
                        .IsRequired();

                    b.Property<int?>("RoomTypeId")
                        .IsRequired();

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("RoomId");

                    b.HasIndex("BeddingTypeId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.RoomQuantity", b =>
                {
                    b.Property<int>("RoomQuantityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumberOfRoom");

                    b.HasKey("RoomQuantityId");

                    b.ToTable("RoomQuantity");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.RoomType", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoomTypeName")
                        .IsRequired();

                    b.HasKey("RoomTypeId");

                    b.ToTable("RoomType");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.ApplicationUserRole", b =>
                {
                    b.HasOne("HotelManagementSystem_CoreMvc.Models.ApplicationRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HotelManagementSystem_CoreMvc.Models.ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.AuthenticModel", b =>
                {
                    b.HasOne("HotelManagementSystem_CoreMvc.Models.ApplicationRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.Booking", b =>
                {
                    b.HasOne("HotelManagementSystem_CoreMvc.Models.Adult", "Adult")
                        .WithMany("Bookings")
                        .HasForeignKey("AdultId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HotelManagementSystem_CoreMvc.Models.BeddingType", "BeddingType")
                        .WithMany("Bookings")
                        .HasForeignKey("BeddingTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HotelManagementSystem_CoreMvc.Models.Child", "Child")
                        .WithMany("Bookings")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HotelManagementSystem_CoreMvc.Models.RoomQuantity", "RoomQuantity")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomQuantityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HotelManagementSystem_CoreMvc.Models.RoomType", "RoomType")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.MenuHelperModel", b =>
                {
                    b.HasOne("HotelManagementSystem_CoreMvc.Models.MenuModel", "MenuModel")
                        .WithMany("MenuHelperModel")
                        .HasForeignKey("MenuModelId");
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.MenuModelManage", b =>
                {
                    b.HasOne("HotelManagementSystem_CoreMvc.Models.MenuModel", "MenuModel")
                        .WithOne("MenuModelManage")
                        .HasForeignKey("HotelManagementSystem_CoreMvc.Models.MenuModelManage", "MenuModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.OrderFood", b =>
                {
                    b.HasOne("HotelManagementSystem_CoreMvc.Models.Food", "Food")
                        .WithMany("OrderFoods")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HotelManagementSystem_CoreMvc.Models.Guest", "Guest")
                        .WithMany("OrderFoods")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.Reservasion", b =>
                {
                    b.HasOne("HotelManagementSystem_CoreMvc.Models.Adult", "Adult")
                        .WithMany("Reservasions")
                        .HasForeignKey("AdultId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HotelManagementSystem_CoreMvc.Models.Child", "Child")
                        .WithMany("Reservasions")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HotelManagementSystem_CoreMvc.Models.Guest", "Guest")
                        .WithMany("Reservasions")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HotelManagementSystem_CoreMvc.Models.Room", "Room")
                        .WithMany("Reservasions")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HotelManagementSystem_CoreMvc.Models.RoomQuantity", "RoomQuantity")
                        .WithMany("Reservasions")
                        .HasForeignKey("RoomQuantityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HotelManagementSystem_CoreMvc.Models.Room", b =>
                {
                    b.HasOne("HotelManagementSystem_CoreMvc.Models.BeddingType", "BeddingType")
                        .WithMany("Rooms")
                        .HasForeignKey("BeddingTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HotelManagementSystem_CoreMvc.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("HotelManagementSystem_CoreMvc.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("HotelManagementSystem_CoreMvc.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("HotelManagementSystem_CoreMvc.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("HotelManagementSystem_CoreMvc.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
